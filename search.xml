<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>set_up_anki_custom_server_new</title>
      <link href="/set-up-anki-custom-server-new/"/>
      <url>/set-up-anki-custom-server-new/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在文章<a href="https://dobefore.github.io/set_up_anki_custom_server_on_https_protocol/%E9%87%8C%E9%9D%A2%E6%8F%90%E4%BE%9B%E4%BA%86Ankidroid%E5%87%A0%E4%B9%8E%E5%85%A8%E7%89%88%E6%9C%AC%EF%BC%88&gt;2.8%EF%BC%89%E7%9A%84%E6%94%AF%E6%8C%81%EF%BC%8C%E4%BD%86%E6%98%AF%E7%94%B1%E4%BA%8E%E9%83%A8%E7%BD%B2%E8%BD%AF%E4%BB%B6%E5%85%BC%E5%AE%B9%E6%80%A7%E5%B9%B6%E4%B8%8D%E8%83%BD%E6%AD%A3%E5%B8%B8%E6%BB%B4%E5%9C%A8%E6%89%80%E6%9C%89Windows%E6%9C%BA%E5%9E%8B%E4%B8%8A%E8%BF%90%E8%A1%8C%E3%80%82%E6%89%80%E4%BB%A5%E8%BF%99%E7%AF%87%E6%96%87%E7%AB%A0%E4%BB%8B%E7%BB%8D%E6%9B%B4%E5%B9%BF%E5%85%BC%E5%AE%B9%E6%80%A7%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%8C%E9%9C%80%E8%A6%81%E5%AE%89%E8%A3%85%E6%88%91%E4%BB%AC%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%AD%E6%8F%90%E4%BE%9B%E7%9A%84Ankidroid%E7%89%88%E6%9C%AC%EF%BC%88%E5%BD%93%E7%84%B6%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%AD%89%E5%BE%852.16%E6%AD%A3%E5%BC%8F%E7%89%88%E7%9A%84%E5%8F%91%E5%B8%83%EF%BC%89%EF%BC%8C%E5%85%B3%E4%BA%8E%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E6%9C%89%E7%89%88%E6%9C%AC%E8%A6%81%E6%B1%82%E7%9C%8B%E8%BF%99%E9%87%8C[ankidroid%E7%89%88%E6%9C%AC%E8%A6%81%E6%B1%82%E5%8E%9F%E5%9B%A0%E4%B8%8E%E7%89%88%E6%9C%AC%E9%80%89%E6%8B%A9](#ankidroid%E7%89%88%E6%9C%AC%E8%A6%81%E6%B1%82%E5%8E%9F%E5%9B%A0%E4%B8%8E%E7%89%88%E6%9C%AC%E9%80%89%E6%8B%A9)%E3%80%82">https://dobefore.github.io/set_up_anki_custom_server_on_https_protocol/里面提供了Ankidroid几乎全版本（&gt;2.8）的支持，但是由于部署软件兼容性并不能正常滴在所有Windows机型上运行。所以这篇文章介绍更广兼容性的方法，需要安装我们文件夹中提供的Ankidroid版本（当然也可以等待2.16正式版的发布），关于为什么会有版本要求看这里[ankidroid版本要求原因与版本选择](#ankidroid版本要求原因与版本选择)。</a></p><p>接下来是一份相当简单的引导教程，可以找个合适的位置存放下载好的文件夹用来<strong>存放同步数据</strong>。</p><h2 id="第一步-打开配置文件ankisyncd-toml，设置你的同步账号和密码"><a href="#第一步-打开配置文件ankisyncd-toml，设置你的同步账号和密码" class="headerlink" title="第一步  打开配置文件ankisyncd.toml，设置你的同步账号和密码"></a>第一步  打开配置文件ankisyncd.toml，设置你的同步账号和密码</h2><p>如下图，输入后记得保存。<br><a href="https://imgse.com/i/v4GRLq"><img src="https://s1.ax1x.com/2022/08/31/v4GRLq.png" alt="v4GRLq.png" loading="lazy"></a></p><h2 id="第二步-双击启动ankiserver，查看同步地址（用于Ankidroid的配置）"><a href="#第二步-双击启动ankiserver，查看同步地址（用于Ankidroid的配置）" class="headerlink" title="第二步 双击启动ankiserver，查看同步地址（用于Ankidroid的配置）"></a>第二步 双击启动ankiserver，查看同步地址（用于Ankidroid的配置）</h2><p>如果之前已经打开，请重新打开。<br><a href="https://imgse.com/i/v4Gfe0"><img src="https://s1.ax1x.com/2022/08/31/v4Gfe0.png" alt="v4Gfe0.png" loading="lazy"></a></p><h2 id="第三步-打开Anki，输入账号-来自第一步-，点击同步"><a href="#第三步-打开Anki，输入账号-来自第一步-，点击同步" class="headerlink" title="第三步 打开Anki，输入账号(来自第一步)，点击同步"></a>第三步 打开Anki，输入账号(来自第一步)，点击同步</h2><p><a href="https://imgse.com/i/v4gcLV"><img src="https://s1.ax1x.com/2022/08/31/v4gcLV.png" alt="v4gcLV.png" loading="lazy"></a></p><h2 id="第四步-安卓手机，连接到电脑相同的局域网"><a href="#第四步-安卓手机，连接到电脑相同的局域网" class="headerlink" title="第四步 安卓手机，连接到电脑相同的局域网"></a>第四步 安卓手机，连接到电脑相同的局域网</h2><p><del>设置 -&gt; 高级设置 -&gt; 自定义同步服务器</del>（此为老版配置地址）,请使用文件夹内的安装包或者等待正式版<code>2.16</code>的发布，以此进入设置–&gt;同步–&gt;自定义同步服务器。<br><a href="https://imgse.com/i/v4GhwV"><img src="https://s1.ax1x.com/2022/08/31/v4GhwV.jpg" alt="v4GhwV.jpg" loading="lazy"></a></p><h2 id="一些额外话"><a href="#一些额外话" class="headerlink" title="一些额外话"></a>一些额外话</h2><p>为便于后续服务器软件打开，你可以将软件发送到开始菜单和桌面，这样你将能够通过开始菜单搜索找到我们的应用，<br>操作方法也很简单，在我们文件夹找到<code>send.exe</code>,双击它，允许管理员运行。<br><a href="https://imgse.com/i/v4GqyR"><img src="https://s1.ax1x.com/2022/08/31/v4GqyR.png" alt="v4GqyR.png" loading="lazy"></a></p><p><a href="https://imgse.com/i/v4Gbl9"><img src="https://s1.ax1x.com/2022/08/31/v4Gbl9.png" alt="v4Gbl9.png" loading="lazy"></a></p><h3 id="Ankidroid版本要求原因与版本选择"><a href="#Ankidroid版本要求原因与版本选择" class="headerlink" title="Ankidroid版本要求原因与版本选择"></a>Ankidroid版本要求原因与版本选择</h3><p>因为安卓安全性相关策略，较新的安卓系统会要求APP HTTPS连接，AnkiDroid 2.10-2.15.6都是基于这样设计的，在新版本2.16(目前为测试版)允许HTTP不安全连接，同样也降低了我们部署的难度和繁琐程度。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Anki </tag>
            
            <tag> 搭建Anki服务器 </tag>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>trigonomrtry(三角数学)</title>
      <link href="/trigonomrtry/"/>
      <url>/trigonomrtry/</url>
      
        <content type="html"><![CDATA[<p>from &lt;&lt;普林斯顿微积分读本&gt;&gt;</p><h2 id="角度与弧度（radians）"><a href="#角度与弧度（radians）" class="headerlink" title="角度与弧度（radians）"></a>角度与弧度（radians）</h2><p><a href="https://imgtu.com/i/vBPFcd"><img src="https://s1.ax1x.com/2022/08/17/vBPFcd.png" alt="vBPFcd.png" loading="lazy"></a></p><h2 id="basic-formula"><a href="#basic-formula" class="headerlink" title="basic formula"></a>basic formula</h2><p>$$<br>angle\ in\ radians  = \frac{\pi}{180°}<br>$$<br><a href="https://imgtu.com/i/vBPi1H"><img src="https://s1.ax1x.com/2022/08/17/vBPi1H.png" alt="vBPi1H.png" loading="lazy"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>island_economy</title>
      <link href="/island-economy/"/>
      <url>/island-economy/</url>
      
        <content type="html"><![CDATA[<p>from : How an Economy Grows and Why It Crashes&lt;&lt;小岛经济学&gt;&gt;,Peter D. Schiff  Andrew J. Schiff<br>前提：islander will eat 1 fish per day .</p><h2 id="About-employee-and-employer"><a href="#About-employee-and-employer" class="headerlink" title="About employee and employer"></a>About employee and employer</h2><p>A worker is free to : </p><ol><li>underconsume to build a net(capital ).</li><li>take out a business loan to nuy a net.</li><li>work for someone who already has a net.</li></ol><p><strong>fish transport</strong>:Finnigan,a strong man,can deliver 100 fish per day,at a 2% freight fee,he earned 2 fish per day. Murray,having taken out a business loan to build a fish cart,he can deliver 300 fish per day,at a 1% rate,he earned 3 fish per day. assuming Finnigan can deliver 400 fish with a cart,as Finnigan can generate 4 fish in income at a 1% rate,Murray offer him 3 fish as employee.</p><p><strong>about paper money</strong>: people love getting stuff for free ,they hate paying taxes .if he could find a way to make it look like he was giving something to the islanders for free ,How could they give away more than they took ?<br>After storm destroy,many of our citizens are hutless and fishless,politician say ‘I will institute a government reconstruction program for our neediest citizens to repair the damage.’</p><p>But, there were not enough fish reserves to finance the spending plans.The government would issue paper money called Fish Reserve Notes,fish:note 1:1.To get support ,government hand out notes to fund .<br>Soon,more notes than the government ‘s account in bank had fish to redeem(兑换？), use official fish (generate new fish from discarded fish parts) to pay back depositors.fish:note 9:10 (10 official fish from 9 genuine fish)</p><p>government establish a fishing department.To guarantee people ,create a new agency insurance corporation with Senate behind their deposits.</p><p>then official  fish:real fish  -&gt; 5:4 -&gt; 3:2 -&gt; 2:1 .now most ate 2 per day ,at minimum .prices for every thing had to go up to keep pace with the diminished nutritional value of fish. ‘fishflatten’ was born and discoraged savings , unemployment high.There is no fish in the bank.</p><p>One island,Sinopia,catch fish by hand,no savings,bank,credit,business,offered to exchange fish for fish reserve notes.The transactions were a huge boom to Usonia,ie boost local economy ,deposits of fish swell .fishflation disappear .</p><p>Sinopia can build factory ,sold these goods to Usonians for fish reserve notes.</p><p>Reality check:Many of these dollars held by foreigners are typically deposited in American banks, where they can be borrowed by Americans. That way we can spend even if we don’t save.<br>Usonia work transfer to “service sector” and less capital intense ,e.g. chefs,story teller .</p><h2 id="About-export"><a href="#About-export" class="headerlink" title="About export"></a>About export</h2><p><strong>trade surplus</strong>  :the country exported much more than it import(sells more aboard than it ).trade deficit is the reverse . A country with trade surplus will create a international demand for its currency .Strong trading positions tend to strengthen a country ‘s currency .BUt when a country ‘s currency rises,its products become more expensive . “a global currency war “–depress currency . In addition,a cheap currency simultaneousLy makes imports morexpensive.</p><p>One island leader withdraw much more fish from bank , causing Usonia fishflation.Usonia leaders close the bank ‘s fish window to foreign deposits. This causes value of Notes to drop,but it finally stablize.Although the gap between Senate spending and what it raised in taxes widens,<br>the notes that are used to pay for fresh fish from foreign sources are exported and never are redeemed for fish .</p><h2 id="about-hut-loan-market"><a href="#about-hut-loan-market" class="headerlink" title="about hut loan market"></a>about hut loan market</h2>]]></content>
      
      
      
        <tags>
            
            <tag> economy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>raspberry pico观察日记</title>
      <link href="/rpi-pico-diary/"/>
      <url>/rpi-pico-diary/</url>
      
        <content type="html"><![CDATA[<p>每次按住<code>bootsel</code>接入pc usb时，会擦除pico原来的程序（.uf2）;下载firmware到pico,第二次只是插入usb供电，不会擦除程序。</p><p>requirements (Installation of development dependencies):</p><ul><li>Toolchain support for the cortex-m0+ processors in the rp2040 (<code>thumbv6m-none-eabi</code>)<pre class="language-none"><code class="language-none">rustup target install thumbv6m-none-eabicargo install flip-link# This is our suggested default &#39;runner&#39;cargo install probe-run# If you want to use elf2uf2-rs instead of probe-run, instead do...cargo install elf2uf2-rs --locked</code></pre></li></ul><p>run with <code>elf2uf2</code> (Loading a UF2 over USB)<br>Make sure your .cargo/config contains the following</p><pre class="language-toml" data-language="toml"><code class="language-toml"><span class="token punctuation">[</span><span class="token table class-name">target.thumbv6m-none-eabi</span><span class="token punctuation">]</span><span class="token key property">runner</span> <span class="token punctuation">=</span> <span class="token string">"elf2uf2-rs -d"</span></code></pre><p>connect pico to pc by pushing <code>bootsel</code> ,and then run <code>cargo run</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> raspberry-pico </tag>
            
            <tag> embeded </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rust-with-correct-SQL</title>
      <link href="/rust-with-correct-SQL/"/>
      <url>/rust-with-correct-SQL/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> rust </tag>
            
            <tag> sqlite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>alternating-current</title>
      <link href="/alternating-current/"/>
      <url>/alternating-current/</url>
      
        <content type="html"><![CDATA[<h2 id="alternating-current"><a href="#alternating-current" class="headerlink" title="alternating current"></a>alternating current</h2><p> <strong>an alternating emf</strong> which continuously changes its magnitude and whose direction is changed many times per second</p><h2 id="Direct-current"><a href="#Direct-current" class="headerlink" title="Direct current"></a>Direct current</h2><h3 id="Manifestations-of-Electric-Current"><a href="#Manifestations-of-Electric-Current" class="headerlink" title="Manifestations of Electric Current"></a>Manifestations of Electric Current</h3><p><strong>electric current</strong> is the process of motion of charges in a body when a potential difference is created between its parts. charge carriers are either ions (positively or negatively charged molecules or atoms) or free electrons. </p><p> <strong>direct or constant current</strong>: The positive electrode always remains positive and the negative electrode remains negative: the current in the external circuit flows in the same direction, viz. from the positive electrode to the negative one. </p><p>When the circuits are closed, the following phenomena will be observed.电流的各种效应：</p><ul><li><p> thermal effect （glowing of the bulb）</p></li><li><p> magnetic effect</p></li><li><p> chemical effect</p></li></ul><p>  <strong>category of conductors</strong>： first-kind conductors: carbon and metals. the second-kind conductors is electrolytes（电解质）,which are decomposed by an electric current into components。</p><p>  <strong>Volta’s rule</strong>: in a circuit consisting of an arbitrary number of different metals (first-kind conductors), the  (voltage) is equal to zero.<br>   <strong>galvanic cells（原电池）</strong>: an electric cell that generates an electromotive force by an irreversible conversion of chemical to electrical energy ;cannot be rechargeed .</p><p>  <strong>Wimshurt machines（静电发电机）</strong>：</p><h2 id="Chemical-and-Thermal-Generators"><a href="#Chemical-and-Thermal-Generators" class="headerlink" title="Chemical and Thermal Generators"></a>Chemical and Thermal Generators</h2><p><strong>Voltanic cell</strong>: Two different metals (copper and zinc) of the circuit are in contact with an electrolyte (sulphuric acid solution). </p><h3 id="Accumulators-充电"><a href="#Accumulators-充电" class="headerlink" title="Accumulators (充电)"></a>Accumulators (充电)</h3><p>Accumulators：constructed a cell with two lead electrodes immersed in sulphuric acid solution. a current is passed through this cell for a certain time, the products of electrolysis are deposited on its electrodes（电极） and enter into chemical reactions with the electrodes. In this state, the cell itself is a current source which, when connected to a circuit, can create a temporary current in it. （the emf（electricmotive force/voltage ） of polarisation （极化））</p><h3 id="Thermocouples-（热电偶）"><a href="#Thermocouples-（热电偶）" class="headerlink" title="Thermocouples （热电偶）"></a>Thermocouples （热电偶）</h3><p>Volta’s rule is true only if all the junctions (the regions of contact between conductors) are at the same temperature .<br><strong>thermoelectromotive force (thermo-emf) （热电动力，温差电动势）</strong>:in a circuit composed of different metals while junctions are at different temperatures, a certain emf operates.</p><h2 id="Electromagnetic-Induction"><a href="#Electromagnetic-Induction" class="headerlink" title="Electromagnetic Induction"></a>Electromagnetic Induction</h2><p>decomposition of magnetic induction .</p><p>We want to know <strong>Conditions for Emergence of Induced Current</strong>,here is the formula:<br>$$<br>B_\bot=B\sin \varphi<br>$$</p><p>accumlators:<br>thermocouples(热电偶):</p>]]></content>
      
      
      
        <tags>
            
            <tag> physics </tag>
            
            <tag> electronics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>snow-crash</title>
      <link href="/snow-crash/"/>
      <url>/snow-crash/</url>
      
        <content type="html"><![CDATA[<p>form book &lt;<snow crash>&gt; </p><h2 id="About-employee-and-employer"><a href="#About-employee-and-employer" class="headerlink" title="About employee and employer"></a>About employee and employer</h2><p>A worker is free to : </p><ol><li>underconsume to build a net.</li><li>take out a business loan to nuy a net.</li><li>work for someone who already has a net.</li></ol><p><strong>fish transport</strong>:Finnigan,a strong man,can deliver 100 fish per day,at a 2% freight fee,he earned 2 fish per day. Murray,having taken out a business loan to build a fish cart,he can deliver 300 fish per day,at a 1% rate,he earned 3 fish per day. assuming Finnigan can deliver 400 fish with a cart,as Finnigan can generate 4 fish in income at a 1% rate,Murray offer him 3 fish as employee.</p>]]></content>
      
      
      
        <tags>
            
            <tag> economy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI-future-ing</title>
      <link href="/AI-future-ing/"/>
      <url>/AI-future-ing/</url>
      
        <content type="html"><![CDATA[<p>book AI未来进行式，author :李开复，chenqiufan.</p><p>弄明白AI逻辑上的定义以及其应用。</p><h2 id="什么是深度学习"><a href="#什么是深度学习" class="headerlink" title="什么是深度学习"></a>什么是深度学习</h2><p>受人类大脑内部复杂的神经元网络的启发，深度学习模拟生物神经网络，构建出包括输入层和输出层在内的人工神经网络，当将数据输入该网络的输入层后，在输出层就会显现出相应的处理结果。<br>深度学习的训练方法是，针对特定的应用场景，给人工神经网络的输入层“投喂”大量数据样本，同时给输出层“投喂”相应的“正确答案”，通过这样的训练，不断优化人工神经网络的内部参数，使根据输入生成最接近“正确答案”的输出的概率最高。举个例子。研究人员如果想训练一个人工神经网络利用深度学习技术学会确认一张图片上是否画着猫，他会先向该网络的输入层“投喂”数百万张带着“有猫”或“无猫”标签的图片样本，然后把相应的结果“投喂”给输出层，再根据输入与输出对该网络内部的参数进行优化，使每一次新的输入行为都能提高输出正确结果的概率。<br>与人类相比，深度学习想要充分发挥作用，离不开海量的相关数据、单一领域的应用场景以及明确的目标函数。</p><h2 id="计算机视觉的基础——卷积神经网络（CNN）"><a href="#计算机视觉的基础——卷积神经网络（CNN）" class="headerlink" title="计算机视觉的基础——卷积神经网络（CNN）"></a>计算机视觉的基础——卷积神经网络（CNN）</h2><p>研究人员从人类大脑中获得灵感，拓宽了深度学习的边界。每当眼睛看外界事物时，大脑中的视觉皮层会调用许多神经元，这些神经元只接受来自其所支配的刺激区域（也称“感受野”）内的信号。感受野能够识别线条、颜色、角度等简单特征，然后将信号传递给大脑最外层的新皮质。大脑皮层会按照层次结构存储信息，并对感受野输出的信号加以处理，然后进行更为复杂的场景理解。</p><p>卷积神经网络（CNN）就是受人类视觉工作机制的启发而产生的。每个卷积神经网络中都有大量类似于人脑感受野的滤波器。这些滤波器，会在图像处理的过程中被反复使用。每个滤波器都只针对图像的部分区域进行特征提取。深度学习的原理，就是通过不断向模型“投喂”大量的图像实现模型的优化，在这个过程中，卷积神经网络的所有滤波器都将自主学会应该提取哪一个特征。每个滤波器的输出，都是它所检测的特征（例如黑色线条）的置信度。</p><p>与大脑皮层的功能网络架构类似，卷积神经网络的架构也有等级之分。每一层滤波器输出的特征置信度都将成为下一层滤波器的输入，用于提取更复杂的特征。举个例子，如果把一张斑马的图片输入卷积神经网络，那么最初一层的滤波器可能会针对图片的每个区域检测黑色线条和白色线条；高一层的滤波器可能会在更大的区域里检测条纹、耳朵、腿；再高一层的滤波器可能会检测出更多的条纹、两只耳朵、四条腿；有些卷积神经网络的最高层滤波器也许会去分辨图片中的动物到底是斑马，还是马或者老虎。</p><h3 id="Deepfake背后的工作机制和原理-GNN"><a href="#Deepfake背后的工作机制和原理-GNN" class="headerlink" title="Deepfake背后的工作机制和原理-GNN"></a>Deepfake背后的工作机制和原理-GNN</h3><p>Deepfake换脸术建立在一种名为生成式对抗网络（GAN）的技术基础之上。顾名思义，GAN是由一对互相对抗（博弈）的网络组成的深度学习神经网络。</p><p>其中的一个网络名为生成式网络，负责尝试生成一些看起来很真实的东西，例如基于数百万张狗的图片，合成一张虚构的狗的图片。另一个网络名为判别式网络，它会把生成式网络所合成的狗的图片与真实的狗的图片进行比较，确定生成式网络的输出是真是假。</p><p>生成式网络会根据判别式网络的反馈，重新进行自我训练，努力让损失函数最小化，即缩小真实图片与合成图片之间的差异，朝着下一次能够成功愚弄判别式网络的目标迈进；而判别式网络也会重新进行自我调整，努力让损失函数最大化，希望练就火眼金睛，不被生成式网络蒙骗。经过数百万次这样的“对抗”之后，生成式网络和判别式网络的能力会不断提升，直至最终达到平衡。</p><h2 id="NLP-自然语言处理"><a href="#NLP-自然语言处理" class="headerlink" title="NLP 自然语言处理"></a>NLP 自然语言处理</h2><p>AI发展史上著名的“图灵测试”，就是把利用自然语言进行交流的能力当作判断机器是否已达到拟人化“智能”的关键指标——如果机器在对话交流中做到成功地让人类误认为它也是“人类”，就意味着机器通过了图灵测试。</p><h3 id="有监督的NLP"><a href="#有监督的NLP" class="headerlink" title="有监督的NLP"></a>有监督的NLP</h3><p>“有监督”意味着在AI模型的学习阶段，每一次输入时都要提供相应的正确答案。（注意，这里的“监督”并不是指简单地把确切的规则“编程”到AI系统中，正如第一章所介绍的，这样做是行不通的。）成对的标注数据（输入和“正确的”输出）被不断“投喂”给人工神经网络，用于AI模型的训练，然后AI模型学习生成与输入相匹配的输出。</p><p>有监督学习的方法还可以用于语音识别（将语音转换成文字）、语音合成（将文字转换成语音）、光学字符识别（将手写体或图片转换成文字）。在处理这类自然语言方面的具体识别任务时，有监督学习非常有效，AI的识别率超过了大多数人类。</p><p>除了自然语言识别，还有一类更复杂的任务——自然语言理解。只有理解了人类语言所表达的“意图”，计算机才能采取下一步行动。例如，当用户对智能音箱说“放一首巴赫”时，智能音箱首先需要理解用户要表达的真正意图——播放作曲家塞巴斯蒂安·</p><h3 id="自监督的NLP"><a href="#自监督的NLP" class="headerlink" title="自监督的NLP"></a>自监督的NLP</h3><p>所谓自监督，就是在训练NLP模型时，无须人工标注输入、输出数据，这种自监督学习方法名为“序列转导”（Sequence Transduction）。</p><p>要想训练一个神经网络，只要在输入端提供文本中的一段单词序列，比如给模型输入“好雨知时节，当春乃发生”，模型就能预测性地输出下半句“随风潜入夜，润物细无声”。<br>2017年，谷歌的研究人员发明了一种新的序列转导模型，称为Transformer，在做了海量语料训练后，它可以具备选择性记忆机制和注意力机制，选择性地记住前文的重点及相关内容。例如，前边提到的NLP模型训练文本选自杜甫的《春夜喜雨》，神经网络会依凭其记忆和注意力来理解输入端“发生”一词在该语境中的含义——使植物萌发、生长，而不会简单地将其理解为字面含义。<br>在谷歌的Transformer之后，最著名的“通用预训练转换器3”（Generative Pre-trained Transformer 3，GPT-3）在2020年问世了。如果向GPT-3输入任意一串单词序列，这个模型将输出一段它认为可以接续的单词序列。经过海量的数据训练，GPT-3还能够实现智能问答交流。例如，若输入“火炉比猫重。海洋比尘土重。烤面包机和铅笔哪个更重？”GPT-3就会输出正确答案“烤面包机”。在这个例子中，前两句话存在的意义，是帮助GPT-3专注于理解“重”的具体含义，最后一句话是所抛出的真正的问题。</p><h3 id="NLP应用平台"><a href="#NLP应用平台" class="headerlink" title="NLP应用平台"></a>NLP应用平台</h3><p>GPT-3最令人兴奋的潜力在于，它有望成为一个崭新的平台或底层架构。基于此，开发者将得以快速构建针对特定领域的应用。</p><p>GPT-3发布后仅仅几个月，人们就在上面搭建了各种应用程序。有让用户与历史人物穿越时空对话的聊天机器人；有根据用户按下的吉他音符自动完成后续乐曲创作的作曲器；有依照用户给出的半张图片自动补全整幅画作的图像生成器；甚至有一款名为DALL.E的应用，能够按照用户输入的随机文本生成相应的图片。<br>除搭建对话式AI系统外，NLP平台还可能成为下一代搜索引擎，回答人们提出的任何问题。在被问到一个问题时，NLP搜索引擎会立即消化所有与该问题相关的内容，并且针对某些功能或为特定行业提供定制化的回答。例如，一个金融领域的AI应用程序应该有能力回答这样的问题：“如果新冠肺炎在秋天卷土重来，我应该如何调整自己的投资组合？”</p><p>除此之外，NLP平台还将记录一些客观发生的基本事实，例如体育比赛的结果或股票市场的最新动态，或者从一段长文字中提炼出要点，以便节省读者的阅读时间。也许，它会成为记者、金融分析师、作家以及任何文字工作者的绝佳工具。 </p><h3 id="AI时代的数字化工作"><a href="#AI时代的数字化工作" class="headerlink" title="AI时代的数字化工作"></a>AI时代的数字化工作</h3><p>有望在未来普及的视频通信技术，会让AI虚拟化身成为可能。<br>在数字化时代，业务的重组与外包、工作流程的自动化将变得前所未有地简单。工作流程的数字化，意味着会源源不断地产生海量数据，这些数据将为AI提供完美的“燃料”。如果每项工作都可以用数据来描述，用某位员工的“输入”和“输出”来描述，而AI又可以实现相同的效果的话，那么这位员工可能就要被AI取代了。<br>根据历史经验，自动化进程的推进，往往发生在经济危机与技术成熟这两个条件同时满足的情况下。</p><h2 id="元宇宙（Metaverse）"><a href="#元宇宙（Metaverse）" class="headerlink" title="元宇宙（Metaverse）"></a>元宇宙（Metaverse）</h2><h3 id="什么是XR（AR-VR-MR）"><a href="#什么是XR（AR-VR-MR）" class="headerlink" title="什么是XR（AR/VR/MR）"></a>什么是XR（AR/VR/MR）</h3><p>XR包括三种技术：AR、VR、MR。AR（Augmented Reality）即增强现实，该技术通过计算机算法将文字、图像、3D模型、视频等虚拟信息叠加到真实世界的环境中，用户可以借助镜片等介质“观看”其所处的世界，从而拥有“超现实”的感官体验，实现对现实世界的“增强”作用。VR（Virtual Reality）指虚拟现实，该技术利用计算机生成一种模拟的虚拟环境，用户会完全沉浸在一个由计算机仿真系统创建的虚拟世界之中。<br>近年来出现了一种比AR更高级的技术——MR（Mixed Reality）即混合现实。MR通过在虚拟环境中引入现实场景信息，在虚拟世界、现实世界和用户之间搭起一个交互反馈的信息桥梁。MR所构建的虚拟场景并非虚拟信息的简单叠加，而是需要理解场景，通过在虚拟环境中引入现实场景信息，将现实世界和虚拟世界融合后产生一个新的可视化环境，在虚拟世界、现实世界和用户之间搭起一个交互反馈的信息回路，其显示的数字内容和现实世界内容能够实时交互，以增强用户体验的真实感。</p><h2 id="自动驾驶"><a href="#自动驾驶" class="headerlink" title="自动驾驶"></a>自动驾驶</h2><p>L0 （“无自动化”的人工驾驶）：人类驾驶员承担所有的驾驶任务，AI会观测道路并在必要时提醒驾驶员。</p><p>L1 （“人类不能放手”的辅助驾驶）：在人类驾驶员的允许下，AI可以完成特定的驾驶操作，如转向。</p><p>L2 （“人类放手”的部分自动驾驶）：AI可以承担多项驾驶任务，如转向、刹车、加速，但人类驾驶员仍然需要监控驾驶环境，并在必要时接管车辆。</p><p>L3 （“人类移开视线”的有条件自动驾驶）：AI可以承担大部分驾驶任务，但需要人类驾驶员在AI遇到无法处理的情况并发出请求时接管车辆（有一些人对L3持怀疑态度，认为人类驾驶员突然接管车辆会增加危险发生的可能性，而不是降低风险）。</p><p>L4 （“人类放松大脑”的高度自动驾驶）：AI可以在整个行车过程中完全接管车辆，但前提是车辆处于AI能够完全理解其状况并处理其问题的环境中，如被高精度地图覆盖的城市路面或者高速公路。</p><p>L5 （“不再需要方向盘”的完全自动驾驶）：无论车辆处于何种环境，都不再需要人类驾驶员参与驾驶操作。</p><h2 id="量子计算"><a href="#量子计算" class="headerlink" title="量子计算"></a>量子计算</h2><p>量子计算机的信息存储和运算使用的则是量子比特，如电子和光子等亚原子粒子比特。这种非同寻常的就是量子力学原理，主要包括量子态叠加和量子纠缠原理。<br>态叠加原理指一个量子比特能同时处于多种可能状态。换句话说，量子比特会“分身术”，几个量子比特就能同时处理海量的计算结果。<br>量子纠缠指两个量子比特无论相距多远，都会保持联系——一个量子比特的状态发生变化会影响另一个量子比特，由于量子纠缠所具备的特性，量子计算机每增加一个量子比特，算力就会成倍提升。<br>量子计算机对自身内部硬件的要求非常高，对周围环境非常敏感，轻微的振动、电气干扰、温度变化、电磁波等，都可能导致量子的纠缠态衰减甚至消失。为了让量子计算机稳定运行且具备可拓展性，研究人员必须发明新的技术，为量子计算机量身打造真空室、超导材料和超低温环境，尽可能降低来自环境因素的干扰。<br>随着量子比特数量的增加，由量子退相干效应引起的误差会更加难以控制。</p><h3 id="什么是自主武器"><a href="#什么是自主武器" class="headerlink" title="什么是自主武器"></a>什么是自主武器</h3><p>AI自主武器让整个杀戮过程——搜寻目标、进入战斗、抹杀生命⸺完全无须人类参与。</p><h3 id="从事哪些工作的人不容易被AI取代"><a href="#从事哪些工作的人不容易被AI取代" class="headerlink" title="从事哪些工作的人不容易被AI取代"></a>从事哪些工作的人不容易被AI取代</h3><p>第一，创造力。AI不具备进行创造、构思以及战略性规划的能力。尽管AI非常擅长针对单一领域的任务进行优化，使目标函数达到最优值，但它无法选择自己的目标，无法跨领域构思，无法进行创造性的思考，也难以具备那些对人类而言不言自明的常识。<br>第二，同理心。AI没有“同情”“关爱”之类的“感同身受”的感觉，无法在情感方面实现与人类的真正互动，无法给他人带去关怀。<br>第三，灵活性。AI和机器人技术无法完成一些精确而复杂的体力工作，如灵巧的手眼协作。此外，AI还难以很好地应对未知的或非结构化的空间，并在其中执行工作任务，尤其是它观察不到的空间。</p><h2 id="AI时代的幸福准则"><a href="#AI时代的幸福准则" class="headerlink" title="AI时代的幸福准则"></a>AI时代的幸福准则</h2><p>亚伯拉罕·马斯洛发表了著名的《人类动机理论》,该理论将人的需求分为五个层次，呈金字塔形，由低到高依次是生理、安全、爱与归属、尊重以及自我实现方面的需求。 </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>web3-basics</title>
      <link href="/web3-basics/"/>
      <url>/web3-basics/</url>
      
        <content type="html"><![CDATA[<p>以下是我根据书本Build web3 APP 观察整理总结而来。<br><strong>the Concept  of the P2P network</strong>:</p><p><strong>About hash and public-private key pair</strong><br>keypair can be used inversely as digital signatures. a user send a msg, along with its digest encrypted with his private key,the recipient can verify that the digest was signed by the owner of the public key.</p><p><strong>About Smart Contract</strong>：A smart contract is a short  program uploaded to the blockchain,which can reacted to the transactions by its arbitrary logic .Each smart contract has its own arbitrary state as well,which can be updated on any transaction and can keep any data whatsoever.And of course,a smart contract can also hold ETH,the native currency of the Ethereum network.In other words,the Ethereum network holds both a digital currency(the ether)and<br>executable code (the smart contracts)with their own state.</p><p><strong>Dapp的响应速度</strong>：all DApps need to account for the long confirmation times of the network。<br>in Ethereum,a transaction may take several seconds to be mined,and even more to be confirmed.</p><p><strong>degrees of DApp(我们如何对待Dapp和c/sApp)</strong>:a DApp can be fully decentralized:it can be hosted on a decentralized storage location,load its data from the blockchain,and rely on smart contracts for any business logic.We can even build fully centralized applications that interact with a decentralized protocol powered by smart contracts on the Ethereum blockchain.By managing our users’assets on a decentralized layer,we guarantee that their data is safe.(这不就是我的猜想：在Anki加一层Dapp确保data is encrypted)</p><p> <strong>use cases</strong>:in a situation where it need a third trusted party.            </p><p>Q1：了解或者实践部署Dapp的大致过程。<br>Q2: How can one get latest state of the Ledger in his Dapp？ </p><p>Q3:How p2p network works?<br>Whenever a user requests a file from the network,that file is downloaded from the nearest node that has the file and is made available for other users to download from this new location.<br>Any data unit in IPFS is not identified by its location,but by its content.When requesting a file from the IPFS network,you address it by its identifier,which is nothing else than a hash of the content.</p><p>To enable IPFS support in our application,we first need to connect to an IPFS node.We can either host our own IPFS public node as part of our application or rely on a  third-party provider.</p><p>All our application’s client-side code can be uploaded to IPFS and served from there.But how can our users access it from a regular browser?Or address it without having to specify a hash?<br>The first problem can be solved via IPFS gateways(see Listing 6-26 for examples).</p><p>An IPFS gateway is a regular web site that serves content from the IPFS network.It allows<br>you to access any IPFS item at the path /ipfs/CID,where CID is the content hash that identifies each object on the network.<br>The second problem,having user-friendly names for IPFS sites,can be solved<br>using DNSLink.DNSLink is a process for mapping DNS names to IPFS content using<br>DNS TXT records.Let’s say we want to map our site in IPFS to the domain example.com.By adding a TXT record to_dnslink.example.com with the value dnslink=/ipfs/CID,any IPFS gateway<br>will automatically map any requests to/ipfs/example.com to the specified content.</p>]]></content>
      
      
      
        <tags>
            
            <tag> web3 </tag>
            
            <tag> blockchain </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>token-economy</title>
      <link href="/token-economy/"/>
      <url>/token-economy/</url>
      
        <content type="html"><![CDATA[<p>from the book &lt;<token economy how the web3 reinvents the Internet>&gt;.</p><h1 id="Web3-basics"><a href="#Web3-basics" class="headerlink" title="Web3 basics"></a>Web3 basics</h1><h2 id="Tokenized-Networks-Web3-the-Stateful-Web"><a href="#Tokenized-Networks-Web3-the-Stateful-Web" class="headerlink" title="Tokenized Networks:  Web3, the Stateful Web"></a>Tokenized Networks:  Web3, the Stateful Web</h2><p> The Web3 changes the data structures in the backend of the Internet, introducing a universal state layer, often by incentivizing network actors with a token.<br>The backbone of this Web3 is represented by a series of blockchain networks or similar distributed ledgers.<br>The Web2 allowed us to enjoy peer-to-peer (P2P) interactions on a global scale, but always with a middleman: a platform acting as a trusted intermediary。</p><p>State refers to information, or the status of “Who is who?”; “Who owns what?”; and “Who has the right to do what?” in a network. </p><h2 id="Decentralized-Applications-in-the-Web3"><a href="#Decentralized-Applications-in-the-Web3" class="headerlink" title="Decentralized Applications in the Web3"></a>Decentralized Applications in the Web3</h2><p>A decentralized application is a blockchain client - often also referred to as the “wallet.” It uses the same technologies to render a webpage or a mobile app (like HTML, CSS, Javascript) but communicates with a blockchain network instead of a server and, in the case of smart contract networks,<br>How can a “wallet” get ledger data(nodes info) ?</p><h2 id="Keeping-Track-of-the-Tokens-Bitcoin-Blockchain-amp-Other-Distributed-Ledgers"><a href="#Keeping-Track-of-the-Tokens-Bitcoin-Blockchain-amp-Other-Distributed-Ledgers" class="headerlink" title="Keeping Track of the Tokens: Bitcoin, Blockchain, &amp; Other Distributed Ledgers"></a>Keeping Track of the Tokens: Bitcoin, Blockchain, &amp; Other Distributed Ledgers</h2><p>Blockchain networks build on the idea of P2P networks, providing a universal data set that every actor can trust, even though they might not know or trust each other. Immutable copies of that data are stored and managed on every node in the network.  (How can I get the immutable<br>copy of data (the ledger) ?)</p><p><strong>Chain of Blocks</strong>: In a blockchain network, token transactions are recorded in batches of data called “blocks” that are “hashed.” This cryptographic hash creates a digital fingerprint of the block . Each block includes the hash of the prior block, thereby linking one block with another into a chain of blocks. This process guarantees the historic integrity of all the blocks back to the first block, also referred to as the genesis block. </p><p>*<strong>he ledger</strong> is a file that maintains a growing list of transaction records, chained in blocks that are cryptographically secured from tampering and revision.the ledger of a blockchain network is a document that is not centrally stored. Instead, each node of the network keeps an identical copy of the same file at all times (with temporary exceptions every time a new block is created).<br><strong>Distributed Ledger</strong>: A copy of the ledger is stored on multiple nodes of a cryptographically secured P2P network. In order to change the ledger data on all copies of the ledger throughout the whole network, the network nodes need to reach a mutual agreement about such a change.Each independent node has the latest version of the ledger （how can I get this?）, which contains all transactions that have ever been made, and can verify transactions.<br><strong>Tokens</strong>:  a token does not represent a digital file that is sent from one device to the other. Instead, it manifests as an entry in the ledger that belongs to a blockchain address. Only the person who has the private key for that address can access the respective tokens,<br>using a wallet software, which acts as a blockchain client (read more:</p><p>Every node of network is a client as well as a server,holding indentical copies of application<br>state  (the ledger).</p><h2 id="Cryptoeconomics-Consensus-amp-Proof-of-Work"><a href="#Cryptoeconomics-Consensus-amp-Proof-of-Work" class="headerlink" title="Cryptoeconomics, Consensus &amp; Proof-of-Work"></a>Cryptoeconomics, Consensus &amp; Proof-of-Work</h2><p>When tokens are sent over the network, each node in the network can propose new entries to be added to the ledger. These nodes validate transactions and compete with each other to solve a complex computational puzzle. In this process, they have to collect all recent network transactions, including some additional metadata, verify the transactions, guess a pseudo-random number (“nonce”), and run all the data through a cryptographic algorithm (SHA-256) to find the hash of the new block. This means that they have to perform computational work, which is the reason why this process is referred to as “Proof-of-Work.”</p><p>If a node is the first one in the network to find that hash value, it can add the block to its ledger and broadcast the hash value of the new block, including all block data, to the rest of the network. The other nodes can now verify the validity of the hash. If they accept this newly added block of transactions as valid, they add the new block to their copy of the ledger.The winning node is rewarded with the “block reward” in the form of newly minted network tokens (plus potential transaction fees). This is why the process is referred to as “mining.”</p><h2 id="smart-contract"><a href="#smart-contract" class="headerlink" title="smart contract"></a>smart contract</h2><p>many smart contract use cases will only be possible interplaying with other technologies like big data applications and the “Internet of Things.”<br>use case:Alice wants to buy Bob’s second-hand car using web3 page 341.</p><blockquote><p>Szabo justified the term “smart” with the functionality that comes with digital contracts to be automatically verified and executed:</p></blockquote><h2 id="institutional-economies-of-web3-or-other-DAOs"><a href="#institutional-economies-of-web3-or-other-DAOs" class="headerlink" title="institutional economies of web3 or other DAOs"></a>institutional economies of web3 or other DAOs</h2><p>DAOs tackle an age-old problem of governance which is referred to as the “principal-agent dilemma,” which occurs when the agent of an organization has the power to make decisions on behalf of, or impacting, the principal—another person or entity in the organization. Examples thereof could be managers that act on behalf of shareholders or politicians that act on behalf of citizens.<br>This dilemma usually increases when there is underlying information asymmetry at play.</p><h2 id="Token"><a href="#Token" class="headerlink" title="Token"></a>Token</h2><p>Traditionally, tokens can represent any form of economic value or access right. Shells and beads were probably the earliest types of tokens used.  Paper money or coins are also tokens.</p><h3 id="Properties-of-Tokens"><a href="#Properties-of-Tokens" class="headerlink" title="Properties of Tokens"></a>Properties of Tokens</h3><ul><li>Rights Perspective</li><li>“Asset tokens” can represent a unit of account (fungible) or a unique good (non-fungible).</li><li>“Credentials tokens” can be used to attest identity</li><li>Fungibility Perspective: Fungibility refers to the interchangeability of a unit of an asset with other units of the same asset.Fungible assets have two key properties: (i) Only quantity matters, which means that units of fungible assets of the same kind are indistinguishable. (ii) Any amount can be merged or divided into a larger or smaller amount of it, making it indistinguishable from the rest. If you were to lend 10 EUR to someone, for example, it would not matter if that person returns the exact same 10 EUR bill or another one, </li><li>Transferability Perspective:</li><li>Durability Perspective: In economics, durability refers to the ability of a currency to withstand repeated use</li></ul><h1 id="The-Future-of-Money-amp-Decentralized-Finance-DeFi"><a href="#The-Future-of-Money-amp-Decentralized-Finance-DeFi" class="headerlink" title="The Future of Money &amp; Decentralized Finance (DeFi)"></a>The Future of Money &amp; Decentralized Finance (DeFi)</h1><p>The primary purpose of money is to facilitate an economic exchange of goods and services within and between economies， avoiding the inefficiencies of such systems like the “coincidence of wants” problem.<br>The coincidence of wants problem refers to the improbability that two parties, each of which own different goods, can agree on a deal, unless each party wants the specific good the other party offers,<br>Money needs to serve as a medium of exchange, store of value, and unit of account in which debt can be denominated.</p><h2 id="Types-of-Money"><a href="#Types-of-Money" class="headerlink" title="Types of Money"></a>Types of Money</h2><p> the dominant type of money is fiat money. Prior to the existence of modern day fiat currencies, commodity money and representative money were in widespread use.</p>]]></content>
      
      
      
        <tags>
            
            <tag> web3 </tag>
            
            <tag> smart-contract </tag>
            
            <tag> distributed-ledger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>common-vim-commands</title>
      <link href="/common-vim-commands/"/>
      <url>/common-vim-commands/</url>
      
        <content type="html"><![CDATA[<pre class="language-none"><code class="language-none">行移动：$:  将光标移动到当前行的行尾0:  将光标移动到当前行的行首在屏幕中移动:gg:  移动到文件开头M:  移动到屏幕中间L:  移动到一屏末尾字符删除:x:  删除当前光标所在处的字符X:  删除当前光标左边的字符行删除:dd:  删除当前光标处的一整行&#x3D;D文本复制、剪切与粘贴:y:  复制，p:粘贴yy:  复制一整行撤销修改、重做与保存:u:  撤销上一步的操作。文本的查找与替换:&#x2F;string   正向查找?string   反向查找设置高亮显示    :set hls    *按键将当前光标处的单词高亮显示，使用n浏览下一个查找高亮的结果:wq save and exit</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>adptive-thinkng</title>
      <link href="/adptive-thinkng/"/>
      <url>/adptive-thinkng/</url>
      
        <content type="html"><![CDATA[<h2 id="作为计算机的脑：隐喻的社会起源"><a href="#作为计算机的脑：隐喻的社会起源" class="headerlink" title="作为计算机的脑：隐喻的社会起源"></a>作为计算机的脑：隐喻的社会起源</h2><p>大约1800年，智力与计算产生了概念分离，这是由于新的社会工作组织引发的。这种概念分离使得机械计算（及<br>最终的计算机）成为可能。</p><h3 id="作为工厂的计算机"><a href="#作为工厂的计算机" class="headerlink" title="作为工厂的计算机"></a>作为工厂的计算机</h3><p>at the end of 19 century,计算开始从开明人士和专家们的专利变成了无技能的体力劳动者的附属品。促进这一转变<br>的力量是制造业中大规模的劳动分工。在计算沦为无需技能的工人大军的重复性任务后，巴贝奇才能够设想用机械计算机来<br>代替人类“计算着”。</p><p>计算机被称为物理符号系统。</p>]]></content>
      
      
      
        <tags>
            
            <tag> psychology </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>termux-settings</title>
      <link href="/termux-settings/"/>
      <url>/termux-settings/</url>
      
        <content type="html"><![CDATA[<h2 id="获取手机存储访问权限"><a href="#获取手机存储访问权限" class="headerlink" title="获取手机存储访问权限"></a>获取手机存储访问权限</h2><pre class="language-none"><code class="language-none">termux-setup-storage</code></pre><h2 id="set-user-account-for-termux"><a href="#set-user-account-for-termux" class="headerlink" title="set user account for termux"></a>set user account for termux</h2><pre class="language-none"><code class="language-none">whoami#set new passpasswd</code></pre><h2 id="install-and-set-ssh"><a href="#install-and-set-ssh" class="headerlink" title="install and set ssh"></a>install and set ssh</h2><p>start sshd</p><pre class="language-none"><code class="language-none">apt install opensshsshd -p8022</code></pre><p>delete old host key in file <code>known_hosts</code> from client<br>e.g. <code>C:\Users\Admin\.ssh\known_hosts</code></p><h2 id="set-on-my-zsh"><a href="#set-on-my-zsh" class="headerlink" title="set on-my-zsh"></a>set on-my-zsh</h2><pre class="language-none"><code class="language-none">apt install curl zsh gitsh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;gitee.com&#x2F;sherkeyxd&#x2F;termux-ohmyzsh&#x2F;raw&#x2F;master&#x2F;install.sh)&quot;</code></pre><p>add plugin <code>autosuggestions</code></p><pre class="language-none"><code class="language-none"># 拷贝到 plugins 目录下(or use alternative repo from gitee)git clone git:&#x2F;&#x2F;github.com&#x2F;zsh-users&#x2F;zsh-autosuggestions $ZSH_CUSTOM&#x2F;plugins&#x2F;zsh-autosuggestions</code></pre><p>在 ~/.zshrc 中配置：</p><pre class="language-none"><code class="language-none">plugins&#x3D;(其他的插件 zsh-autosuggestions)</code></pre><h2 id="install-linux-distribution"><a href="#install-linux-distribution" class="headerlink" title="install linux distribution"></a>install linux distribution</h2><pre class="language-none"><code class="language-none">pkg install proot-distroproot-distro listproot-distro install ubuntu# or save command to a scriptproot-distro login ubuntu</code></pre><h2 id="settings-in-linux-distribution"><a href="#settings-in-linux-distribution" class="headerlink" title="settings in linux distribution"></a>settings in linux distribution</h2><h3 id="install-ssh"><a href="#install-ssh" class="headerlink" title="install ssh"></a>install ssh</h3><pre class="language-none"><code class="language-none">apt updateapt install openssh-server</code></pre><p>modify sshd_config</p><pre class="language-none"><code class="language-none">vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config</code></pre><p>把Port 22改为 9022，注意不能是22，也不能是8022<br>把PermitRootLogin那一行，注释去掉，改为PermiRootLogin yes</p><p>start sshd</p><pre class="language-none"><code class="language-none">&#x2F;etc&#x2F;init.d&#x2F;ssh stop&#x2F;etc&#x2F;init.d&#x2F;ssh start</code></pre><p>check status of sshd</p><pre class="language-none"><code class="language-none">&#x2F;etc&#x2F;init.d&#x2F;ssh status</code></pre><p>get username <code>whoami</code><br>最终还是失败不是ssh的问题</p>]]></content>
      
      
      
        <tags>
            
            <tag> termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>influence</title>
      <link href="/influence/"/>
      <url>/influence/</url>
      
        <content type="html"><![CDATA[<ol><li><p>the contrast principle(对比)</p></li><li><p>reciprocation rule(互惠，The Old Give and Take…and Take) .<br>By virtue of the reciprocity rule, then, we are obligated to the future repayment of favors, gifts, invitations, and the like. </p></li><li><p>commitment and consistency.<br>Once we have made a choice or taken a stand, we will encounter personal and interpersonal pressures to behave consistently with that commitment. Those pressures will cause us to respond in ways that justify our earlier decision.</p></li><li><p>social proof （从众？）.<br>example/situation:在音频或视频中插入笑声。<br>It states that one means we use to determine what is correct is to find out what other people think is correct.</p></li></ol><p>it provides a convenient shortcut for determining how to behave but, at the same time, makes one who uses the shortcut vulnerable to the attacks of profiteers who lie in wait along its path.<br> 5. liking.<br> situation:被朋友邀请参加party,朋友带货买东西，自己似乎不得不买个东西</p><p> we most prefer to say yes to the requests of someone we know and like.<br> 6. authority. Obedience of authority.<br> 7. scarcity .the rule of the few.<br> example : deadline tactic.</p><p> Freedoms once granted will not be relinquished without a fight.</p>]]></content>
      
      
      <categories>
          
          <category> book-digest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>creative-thinking</title>
      <link href="/creative-thinking/"/>
      <url>/creative-thinking/</url>
      
        <content type="html"><![CDATA[<ul><li>We humans cannot make anything out of nothing.The potentisl materials<br>are all here in our universe.</li><li>Think by analogy,learn from nature.</li><li>make the strange familiar and make the familiar strange. Things,people and ideas are familiar<br>we stop thinking about them.</li><li>widen your span of relavence. Transfer knowledge from one field to another.have knowledge in<br>more than one field.</li><li>Explorer into the known often make unexpected discoveries. have a wide span of attention and<br>a broad range of interests.</li><li>Chance favours only the prepared mind.</li><li>Curiosity,not to stop questioning.</li><li>observe as objective as possible.</li><li>a good listener,curiosity(desire to know)</li><li>reading to generate ideas.</li><li>keep a notebook</li><li>make and test your assumptions.</li><li>depth mind,subconscious mind.</li><li>know when to turn away from a problem and leave it for a while</li><li>work it out. trying to make or produce something is a way of continuing the process of creative<br>thinking.</li></ul>]]></content>
      
      
      <categories>
          
          <category> book-digest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> creative-thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-blog-config</title>
      <link href="/hexo-blog-config/"/>
      <url>/hexo-blog-config/</url>
      
        <content type="html"><![CDATA[<p>After clone blog source code into local,these steps should be done.</p><h2 id="install-nodejs-and-npm"><a href="#install-nodejs-and-npm" class="headerlink" title="install nodejs and npm"></a>install nodejs and npm</h2><p>install archive file,unpack it.</p><pre class="language-none"><code class="language-none">https:&#x2F;&#x2F;nodejs.org&#x2F;en&#x2F;download&#x2F;</code></pre><p>add bin path to .bashrc</p><pre class="language-none"><code class="language-none">export PATH&#x3D;&quot;$HOME&#x2F;node-v16.14.2-linux-arm64&#x2F;bin:$PATH&quot;</code></pre><h2 id="install-theme-yun"><a href="#install-theme-yun" class="headerlink" title="install theme -yun"></a>install theme -yun</h2><p>if not,will cause</p><pre class="language-none"><code class="language-none">WARN  No layout: about&#x2F;index.htmlWARN  No layout: tags&#x2F;index.htmlWARN  No layout: categories&#x2F;index.html</code></pre><p><a href="https://hexo-theme-yun.vercel.app/guide/#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B">https://hexo-theme-yun.vercel.app/guide/#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B</a></p><h2 id="generate-and-deploy"><a href="#generate-and-deploy" class="headerlink" title="generate and deploy"></a>generate and deploy</h2><pre class="language-none"><code class="language-none">hexo ghexo d</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-commands</title>
      <link href="/linux-commands/"/>
      <url>/linux-commands/</url>
      
        <content type="html"><![CDATA[<h3 id="scp-copy-file-between-local-and-remote"><a href="#scp-copy-file-between-local-and-remote" class="headerlink" title="scp copy file between local and remote"></a>scp copy file between local and remote</h3><p>copy file from local to a remote</p><p>```</p><h1 id="eg-location2-home-ubuntu"><a href="#eg-location2-home-ubuntu" class="headerlink" title="eg:location2=/home/ubuntu"></a>eg:location2=/home/ubuntu</h1><p>scp test.txt <a href="mailto:ubuntu@192.x.x.x">ubuntu@192.x.x.x</a>:/location2</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>raspberry-pi-wifi-error</title>
      <link href="/raspberry-pi-wifi-error/"/>
      <url>/raspberry-pi-wifi-error/</url>
      
        <content type="html"><![CDATA[<p>On raspberry pi 4b,two reasons cause wifi error.</p><h2 id="usb-3-0-interfere-with-wifi"><a href="#usb-3-0-interfere-with-wifi" class="headerlink" title="usb 3.0 interfere with wifi"></a>usb 3.0 interfere with wifi</h2><p>reproduce:</p><pre class="language-none"><code class="language-none">sudo wpa_supplicant  -i wlan0 -c &#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant.confpplicant.conf Successfully initialized wpa_supplicantwlan0: Trying to associate with SSID &#39;SZMIFI&#39;wlan0: CTRL-EVENT-ASSOC-REJECT bssid&#x3D;00:00:00:00:00:00 status_code&#x3D;16wlan0: Trying to associate with SSID &#39;SZMIFI&#39;wlan0: CTRL-EVENT-ASSOC-REJECT bssid&#x3D;00:00:00:00:00:00 status_code&#x3D;16wlan0: Trying to associate with SSID &#39;SZMIFI&#39;wlan0: CTRL-EVENT-ASSOC-REJECT bssid&#x3D;00:00:00:00:00:00 status_code&#x3D;16wlan0: Trying to associate with SSID &#39;SZMIFI&#39;wlan0: CTRL-EVENT-ASSOC-REJECT bssid&#x3D;00:00:00:00:00:00 status_code&#x3D;16wlan0: CTRL-EVENT-SSID-TEMP-DISABLED id&#x3D;0 ssid&#x3D;&quot;SZMIFI&quot; auth_failures&#x3D;1 duration&#x3D;10 reason&#x3D;CONN_FAILEDwlan0: CTRL-EVENT-SSID-REENABLED id&#x3D;0 ssid&#x3D;&quot;SZMIFI&quot;wlan0: Trying to associate with SSID &#39;SZMIFI&#39;wlan0: CTRL-EVENT-ASSOC-REJECT bssid&#x3D;00:00:00:00:00:00 status_code&#x3D;16wlan0: CTRL-EVENT-SSID-TEMP-DISABLED id&#x3D;0 ssid&#x3D;&quot;SZMIFI&quot; auth_failures&#x3D;2 duration&#x3D;20 reason&#x3D;CONN_FAILED^Cnl80211: deinit ifname&#x3D;p2p-dev-wlan0 disabled_11b_rates&#x3D;0p2p-dev-wlan0: CTRL-EVENT-TERMINATING nl80211: deinit ifname&#x3D;wlan0 disabled_11b_rates&#x3D;0</code></pre><p>fix: switch to usb 2.0</p><h2 id="HDMI-is-jamming-its-own-wifi"><a href="#HDMI-is-jamming-its-own-wifi" class="headerlink" title="HDMI is jamming its own wifi"></a>HDMI is jamming its own wifi</h2><p>screen definition higher than 1920*1080 will cause wifi stop working.</p><p>fix:keep screen definition to 1920*1080 and apply,in the Preference-&gt;Screen Configuration</p><h2 id="keyboard-and-mouce-sometimes-dont-respond"><a href="#keyboard-and-mouce-sometimes-dont-respond" class="headerlink" title="keyboard and mouce sometimes dont respond."></a>keyboard and mouce sometimes dont respond.</h2><p>fix: disable hdmi until raspberry pi boot with keyboard and mouce</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://hackaday.com/2019/11/28/raspberry-pi-4-hdmi-is-jamming-its-own-wifi/">https://hackaday.com/2019/11/28/raspberry-pi-4-hdmi-is-jamming-its-own-wifi/</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> raspberry-pi </tag>
            
            <tag> wifi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-command</title>
      <link href="/docker-command/"/>
      <url>/docker-command/</url>
      
        <content type="html"><![CDATA[<p>difference between image and container<br>We can build or image on local or from docker hub.Then We run container from image,you can run multi-containers from a image with <code>--name=appname</code>.</p><h2 id="install-docker"><a href="#install-docker" class="headerlink" title="install docker"></a>install docker</h2><pre class="language-none"><code class="language-none">curl -fsSL https:&#x2F;&#x2F;get.docker.com -o get-docker.shsudo sh get-docker.sh</code></pre><h2 id="Add-a-Non-Root-User-to-the-Docker-Group"><a href="#Add-a-Non-Root-User-to-the-Docker-Group" class="headerlink" title="Add a Non-Root User to the Docker Group"></a>Add a Non-Root User to the Docker Group</h2><p>this require you are login to non-root user on OS</p><pre class="language-none"><code class="language-none">sudo usermod -aG docker Pi</code></pre><h2 id="remove-docker"><a href="#remove-docker" class="headerlink" title="remove docker"></a>remove docker</h2><pre class="language-none"><code class="language-none">sudo apt-get purge docker-cesudo rm -rf &#x2F;var&#x2F;lib&#x2F;docker</code></pre><h2 id="build-docker-image"><a href="#build-docker-image" class="headerlink" title="build docker image"></a>build docker image</h2><p>image_name:tag</p><pre class="language-none"><code class="language-none">sudo docker build -t ankisyncd:latest .</code></pre><h2 id="container-run-start-stop-remove"><a href="#container-run-start-stop-remove" class="headerlink" title="container run,start,stop,remove"></a>container run,start,stop,remove</h2><h3 id="run-container-in-foreground-add-d-to-run-in-background"><a href="#run-container-in-foreground-add-d-to-run-in-background" class="headerlink" title="run container in foreground (add -d to run in background)"></a>run container in foreground (add -d to run in background)</h3><pre class="language-none"><code class="language-none">sudo docker run -it ankisyncd:latest</code></pre><h3 id="start-and-stop-container"><a href="#start-and-stop-container" class="headerlink" title="start and stop container"></a>start and stop container</h3><pre class="language-none"><code class="language-none">docker container stop container_namedocker container start container_name</code></pre><h3 id="look-up-IP-address-in-a-container"><a href="#look-up-IP-address-in-a-container" class="headerlink" title="look up IP address in a container"></a>look up IP address in a container</h3><p><code>docker ps -a</code> to get container_name</p><pre class="language-none"><code class="language-none">docker inspect container_name | grep Address</code></pre><h3 id="remove-image-and-container"><a href="#remove-image-and-container" class="headerlink" title="remove image and container"></a>remove image and container</h3><p>remove image</p><p>run <code>docker images</code> to get <code>IMAGE ID</code>,<br>then run <code>sudo docker rmi 8458e1ca9dca</code></p><p>remove container</p><p>run <code>docker ps -a</code> to get <code>CONTAINER ID</code>,<br>then run <code>sudo docker rm 97590f6d5deb</code></p><h2 id="Volume-for-persist-data"><a href="#Volume-for-persist-data" class="headerlink" title="Volume for persist data"></a>Volume for persist data</h2><p>add <code>VOLUME /app</code> in Dockerfile</p><p>show Volume</p><pre class="language-none"><code class="language-none">docker volume list</code></pre><p>remove the volume by <code>volume name</code></p><pre class="language-none"><code class="language-none">docker volume rm 962b2d970bcd96de860b348130a84aa86c0aaa55378b3dce35225659679ff808</code></pre><h2 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h2><p><a href="https://phoenixnap.com/kb/docker-on-raspberry-pi">https://phoenixnap.com/kb/docker-on-raspberry-pi</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用命令</title>
      <link href="/git-commonly-used-command/"/>
      <url>/git-commonly-used-command/</url>
      
        <content type="html"><![CDATA[<h3 id="config-user"><a href="#config-user" class="headerlink" title="config user"></a>config user</h3><pre class="language-none"><code class="language-none">git config --global user.name &quot;dobefore&quot;git config --global user.email 1432338032@qq.com</code></pre><h3 id="Tag"><a href="#Tag" class="headerlink" title="Tag"></a>Tag</h3><p>create local tag<br><code>git tag 0.1.2</code><br>push tag to remote<br><code>git push origin 0.1.2</code></p><h3 id="fetch-and-checkout-to-other-people’s-pull-request"><a href="#fetch-and-checkout-to-other-people’s-pull-request" class="headerlink" title="fetch and checkout to other people’s pull request"></a>fetch and checkout to other people’s pull request</h3><pre class="language-none"><code class="language-none">#To fetch a remote PR into your local repo,git fetch origin pull&#x2F;PRID&#x2F;head:BRANCHNAMEgit checkout BRANCHNAME</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gen-c-dynamical-library-using-rust-and-call</title>
      <link href="/gen-c-dynamical-library-using-rust/"/>
      <url>/gen-c-dynamical-library-using-rust/</url>
      
        <content type="html"><![CDATA[<h3 id="使用rust生成动态库cdylib"><a href="#使用rust生成动态库cdylib" class="headerlink" title="使用rust生成动态库cdylib"></a>使用rust生成动态库cdylib</h3><h4 id="layout"><a href="#layout" class="headerlink" title="layout"></a>layout</h4><pre class="language-none"><code class="language-none">├── Cargo.lock├── Cargo.toml└── src    └── lib.rs</code></pre><h4 id="Cargo-toml"><a href="#Cargo-toml" class="headerlink" title="Cargo.toml"></a>Cargo.toml</h4><pre class="language-toml" data-language="toml"><code class="language-toml"><span class="token punctuation">[</span><span class="token table class-name">lib</span><span class="token punctuation">]</span><span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">"rustdll"</span> <span class="token comment">#生成dll的文件名</span><span class="token key property">crate-type</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">"cdylib"</span><span class="token punctuation">]</span></code></pre><h4 id="lib-rs"><a href="#lib-rs" class="headerlink" title="lib.rs"></a>lib.rs</h4><pre class="language-rust" data-language="rust"><code class="language-rust"><span class="token attribute attr-name">#[no_mangle]</span><span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token keyword">fn</span> <span class="token function-definition function">gettime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> input <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">"from rust dll &#123;&#125;"</span><span class="token punctuation">,</span>input<span class="token punctuation">)</span></code></pre><p>build之后，在Windows平台会生成两个文件 <code>rustdll.dll</code>可导入路``rustdll.dll.lib<code> ；而在Linux平台生成文件</code>librustdll.so`</p><h3 id="调用由rust生成的动态库里的函数"><a href="#调用由rust生成的动态库里的函数" class="headerlink" title="调用由rust生成的动态库里的函数"></a>调用由rust生成的动态库里的函数</h3><h4 id="layout-1"><a href="#layout-1" class="headerlink" title="layout"></a>layout</h4><pre class="language-none"><code class="language-none">aa&#x2F;├── Cargo.lock├── Cargo.toml├── build.rs├── lib│   └── librustdll.so└── src    └── main.rs</code></pre><h4 id="LInux"><a href="#LInux" class="headerlink" title="LInux"></a>LInux</h4><p>build.rs</p><pre class="language-rust" data-language="rust"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// indicate dynamical library</span>    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">"cargo:rustc-link-lib=dylib=rustdll"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// search lib directory,relative path is also ok</span>    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">"cargo:rustc-link-search=native=/home/ubuntu/aa/lib"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>src/main.rs</p><pre class="language-rust" data-language="rust"><code class="language-rust">和 build<span class="token punctuation">.</span>rs 中的cargo<span class="token punctuation">:</span>rustc<span class="token operator">-</span>link<span class="token operator">-</span>lib 二选一<span class="token comment">//#[link(name = "rustdll")]</span><span class="token keyword">extern</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">fn</span> <span class="token function-definition function">gettime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">unsafe</span> <span class="token punctuation">&#123;</span>        <span class="token function">gettime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>build command</p><p>if <code>cargo build</code>,可以编译但link error</p><pre class="language-none"><code class="language-none">ldd target&#x2F;debug&#x2F;aa       linux-vdso.so.1 (0x00007ffd5b12d000)       librustdll.so &#x3D;&gt; not found</code></pre><p>add new flags</p><pre class="language-none"><code class="language-none">cargo rustc -- -C link-args&#x3D;&quot;-Wl,-rpath,&#x2F;home&#x2F;ubuntu&#x2F;aa&#x2F;lib&#x2F;&quot;</code></pre><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><p>src/main.rs</p><pre class="language-rust" data-language="rust"><code class="language-rust">和 build<span class="token punctuation">.</span>rs 中的cargo<span class="token punctuation">:</span>rustc<span class="token operator">-</span>link<span class="token operator">-</span>lib 二选一<span class="token comment">//#[link(name = "rustdll.dll")]</span><span class="token keyword">extern</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">fn</span> <span class="token function-definition function">gettime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">unsafe</span> <span class="token punctuation">&#123;</span>        <span class="token function">gettime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>build.rs</p><pre class="language-rust" data-language="rust"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// search import library .lib</span> <span class="token comment">// indicate dynamical library</span>    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">"cargo:rustc-link-lib=dylib=rustdll.dll"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// search lib directory,relative path is also ok</span>    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">"cargo:rustc-link-search=native=.."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>将<code>rustdll.dll</code>和<code>rustdll.dll.lib</code>放在和aa同目录下，执行<code>cargo build</code></p><p>完成后，将可执行文件和动态库文件放在同一文件夹下即可</p><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="http://ostack.cn/?qa=621344/">Linking Rust application with a dynamic library not in the runtime linker search path</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> rust </tag>
            
            <tag> cdylib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>build_ankisyncd</title>
      <link href="/build-ankisyncd/"/>
      <url>/build-ankisyncd/</url>
      
        <content type="html"><![CDATA[<p>disable git verify ssl</p><pre class="language-none"><code class="language-none">export GIT_SSL_NO_VERIFY&#x3D;true</code></pre><h3 id="Configure-gcc"><a href="#Configure-gcc" class="headerlink" title="Configure  gcc"></a>Configure  gcc</h3><h4 id="Install-the-C-cross-toolchain-only-for-armv7"><a href="#Install-the-C-cross-toolchain-only-for-armv7" class="headerlink" title="Install the C cross toolchain(only for armv7)"></a>Install the C cross toolchain(only for armv7)</h4><pre class="language-none"><code class="language-none"># Step 1: Install the C cross toolchain$ sudo apt-get install -qq gcc-arm-linux-gnueabihf</code></pre><h4 id="add-cargo-compiled-standard-crates"><a href="#add-cargo-compiled-standard-crates" class="headerlink" title="add cargo compiled standard crates"></a>add cargo compiled standard crates</h4><pre class="language-none"><code class="language-none">#for aarch54rustup target add aarch64-unknown-linux-musl# for aarch32&#x2F;armv7rustup target add armv7-unknown-linux-musleabihf#for darwin macosrustup target add x86_64-apple-darwin</code></pre><h4 id="download-cross-compile-toolchains-and-set-ENV-var"><a href="#download-cross-compile-toolchains-and-set-ENV-var" class="headerlink" title="download cross-compile toolchains and set ENV var"></a>download cross-compile toolchains and set ENV var</h4><ol><li>aarch64/x86_64</li></ol><p>enter site <a href="https://link.zhihu.com/?target=https://musl.cc/">https://musl.cc/</a>  to get musl-gcc and decompression</p><p>export bin (x86_64-linux-musl-native seems not able to build ,so use cross version)</p><pre class="language-none"><code class="language-none">export PATH&#x3D;&quot;$HOME&#x2F;aarch64-linux-musl-cross&#x2F;bin:$PATH&quot;export PATH&#x3D;&quot;$HOME&#x2F;x86_64-linux-musl-cross&#x2F;bin:$PATH&quot;source ~&#x2F;.profile</code></pre><ol start="2"><li><p>armv7</p><pre class="language-none"><code class="language-none">git clone --depth 1 https:&#x2F;&#x2F;github.com&#x2F;raspberrypi&#x2F;tools.git rpitools</code></pre><p>export bin</p><pre class="language-none"><code class="language-none">export PATH&#x3D;&quot;$HOME&#x2F;rpitools&#x2F;arm-bcm2708&#x2F;arm-rpi-4.9.3-linux-gnueabihf&#x2F;bin:$PATH&quot;</code></pre></li><li><p>macos</p><pre class="language-none"><code class="language-none"># Install build dependenciessudo apt install \    clang \    gcc \    g++ \    zlib1g-dev \    libmpc-dev \    libmpfr-dev \    libgmp-dev \    libxml2-dev</code></pre></li></ol><p>Add the following to a script called osxcross_setup.sh and make it executable.</p><pre class="language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;tpoechtrager&#x2F;osxcrosscd osxcrosswget -nc https:&#x2F;&#x2F;s3.dockerproject.org&#x2F;darwin&#x2F;v2&#x2F;MacOSX10.10.sdk.tar.xzmv MacOSX10.10.sdk.tar.xz tarballs&#x2F;UNATTENDED&#x3D;yes OSX_VERSION_MIN&#x3D;10.7 .&#x2F;build.sh</code></pre><p>run sh</p><pre class="language-none"><code class="language-none">.&#x2F;osxcross_setup.sh</code></pre><p>Add to PATH ENV</p><pre class="language-none"><code class="language-none">export PATH&#x3D;&quot;&#x2F;home&#x2F;ubuntu&#x2F;osxcross&#x2F;target&#x2F;bin:$PATH&quot;</code></pre><h4 id="Configure-Cargo"><a href="#Configure-Cargo" class="headerlink" title="Configure Cargo"></a>Configure Cargo</h4><p>   cat ~/.cargo/config</p>   <pre class="language-none"><code class="language-none">   [target.x86_64-apple-darwin]linker &#x3D; &quot;x86_64-apple-darwin14-clang&quot;ar &#x3D; &quot;x86_64-apple-darwin14-ar&quot;   [target.aarch64-unknown-linux-musl]   linker &#x3D; &quot;aarch64-linux-musl-gcc&quot;   rustflags &#x3D; [&quot;-C&quot;, &quot;target-feature&#x3D;+crt-static&quot;, &quot;-C&quot;, &quot;link-arg&#x3D;-lgcc&quot;]      [target.armv7-unknown-linux-musleabihf]   linker &#x3D; &quot;arm-linux-musleabihf-gcc&quot;   rustflags  &#x3D; [       &quot;-C&quot;, &quot;target-feature&#x3D;+crt-static&quot;,       &quot;-C&quot;, &quot;link-args&#x3D;-static&quot;,   ]      [target.x86_64-unknown-linux-musl]   linker &#x3D; &quot;x86_64-linux-musl-gcc&quot;   rustflags &#x3D; [&quot;-C&quot;, &quot;target-feature&#x3D;+crt-static&quot;, &quot;-C&quot;, &quot;link-args&#x3D;-static&quot;,]      [net]   retry &#x3D; 2 # 失败 自动重试 次数   git-fetch-with-cli &#x3D; true</code></pre><h3 id="Cross-compile-openssl"><a href="#Cross-compile-openssl" class="headerlink" title="Cross-compile openssl"></a>Cross-compile openssl</h3><h4 id="cross-compile"><a href="#cross-compile" class="headerlink" title="cross-compile"></a>cross-compile</h4><pre class="language-none"><code class="language-none">wget https:&#x2F;&#x2F;www.openssl.org&#x2F;source&#x2F;openssl-1.0.1t.tar.gztar -zxvf openssl-OpenSSL_1_1_1fcd ..# for aarch64export MACHINE&#x3D;aarch64export ARCH&#x3D;armexport CC&#x3D;aarch64-linux-musl-gcc# for x86_64export MACHINE&#x3D;x86_64export ARCH&#x3D;x86_64export CC&#x3D;x86_64-linux-musl-gcc#aarch32&#x2F;armv7export MACHINE&#x3D;armv7export ARCH&#x3D;arm# in rpitoolsexport CC&#x3D;arm-linux-gnueabihf-gcccd openssl-OpenSSL_1_1_1f# add --prefix&#x3D;dir to apoint dir will be make install.&#x2F;config shared &amp;&amp; makecd ..# dont know if its true.fisrt time will build failed.change add OPENSSL_LIB_DIR # with lib,then build,this will fail and last change back and build export OPENSSL_LIB_DIR&#x3D;&#x2F;home&#x2F;ubuntu&#x2F;openssl-1.0.1t&#x2F;export OPENSSL_INCLUDE_DIR&#x3D;&#x2F;home&#x2F;ubuntu&#x2F;openssl-1.0.1t&#x2F;includeexport OPENSSL_STATIC&#x3D;true</code></pre><h4 id="cross-compile-libsqlite3"><a href="#cross-compile-libsqlite3" class="headerlink" title="cross compile libsqlite3"></a>cross compile libsqlite3</h4><p>this step isnt necessary during build ankisyncd,do in build<br>everydaytask.</p><pre class="language-none"><code class="language-none">export CC&#x3D;aarch64-linux-musl-gcc .&#x2F;configure --host&#x3D;aarch64 --prefix&#x3D;&#x2F;home&#x2F;ubuntu&#x2F;sqlmake &amp; make install  export SQLITE3_LIB_DIR&#x3D;$HOME&#x2F;sql&#x2F;bin&#x2F; export SQLITE3_INCLUDE_DIR&#x3D;$HOME&#x2F;sql&#x2F;include&#x2F;</code></pre><h3 id="build-ankisyncd"><a href="#build-ankisyncd" class="headerlink" title="build ankisyncd"></a>build ankisyncd</h3><p>at last ,build</p><pre class="language-none"><code class="language-none"># aarch64cargo build --target&#x3D;aarch64-unknown-linux-musl --release#aarch32&#x2F;armv7 cargo build --target armv7-unknown-linux-musleabihf --release#linux x86_64cargo build --release --target&#x3D;x86_64-unknown-linux-musl# MacOS x86_64CC&#x3D;o64-clang \CXX&#x3D;o64-clang++ \SQLITE3_SYS_STATIC&#x3D;1 \OPENSSL_SYS_STATIC&#x3D;1 \cargo build --target x86_64-apple-darwin</code></pre><p>package and compression</p><pre class="language-none"><code class="language-none">tar -czvf ankisyncd_linux_armv7.tar.gz ankisyncd ankisyncctl</code></pre><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><ul><li><a href="https://jiapeng.me/helium-gateway-rs-compile/">cross compile for armv7</a></li><li><a href="https://github.com/japaric/rust-cross">rust cross github</a></li><li><a href="https://www.cnblogs.com/sevenyuan/p/13663372.html">交叉编译rust-openssl crate for armv7</a></li><li><a href="https://qiita.com/liubin/items/6c94f0b61f746c08b74c">How to build openssl-sys crate for musl in Rust</a></li><li><a href="https://www.jianshu.com/p/7d599bdf370a">git错误error: server certificate verification failed. CAfile:</a></li><li><a href="https://rustwiki.org/zh-CN/edition-guide/rust-2018/platform-and-target-support/musl-support-for-fully-static-binaries.html">MUSL 支持完全静态二进制文件</a></li><li><a href="https://doc.rust-lang.org/cargo/reference/config.html">git-fetch-with-cli</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> rust </tag>
            
            <tag> cross-compile </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rust-fatal-error-link1201</title>
      <link href="/rust-fatal-error-link1201/"/>
      <url>/rust-fatal-error-link1201/</url>
      
        <content type="html"><![CDATA[<p>on occationally,当我run <code>cargo build</code> using building tool msvc,error appears as follows:</p><pre class="language-none"><code class="language-none">note: LINK : fatal error LNK1201: error writing to program database&#39;D:\software\vscode_project\anki_sync\anki-sync-server-rs\target\debug\build\futures-channel-29fccd2a64763c5c\build_script_build-29fccd2a64763c5c.pdb&#39;; check for insufficient diskspace, invalid path, or insufficient privilege</code></pre><p>after search the Internet,I find the solution. You can delete the file error info refers to,that is,in this situation,<code>D:\software\vscode_project\anki_sync\anki-sync-server-rs\target\debug\build\futures-channel-29fccd2a64763c5c\build_script_build-29fccd2a64763c5c.pdb</code>. Or you just can delete folder /target ,problems  solved.</p><h3 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h3><ul><li><a href="https://stackoverflow.com/questions/35662865/fatal-error-lnk1201-error-writing-to-program-database-visual-studio-2003">fatal error LNK1201: error writing to program database - Visual Studio 2003</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> program language </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rust </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sciter-rs控件中文显示乱码</title>
      <link href="/rust-sciter-utf8-support/"/>
      <url>/rust-sciter-utf8-support/</url>
      
        <content type="html"><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>在用Rust运行sciter app 时，控件文字包含中文会出现乱码的问题。</p><h1 id="How-to-Fix"><a href="#How-to-Fix" class="headerlink" title="How to Fix"></a>How to Fix</h1><ol><li>如果在html页面里面，在 <code>&lt;head&gt;</code>标签里加上<code>meta</code> 标签注明字符集<code>utf-8</code>。</li></ol><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/html; charset=utf-8<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><ol start="2"><li><p>如果是以BOM开始的utf8资源.</p><pre class="language-none"><code class="language-none">first three bytes: EF BB BF). #不是太明白</code></pre><h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1></li></ol><ul><li><a href="https://sciter.com/forums/topic/sciterloadhtml-and-utf-8/">sciterloadhtml-and-utf-8</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> program language </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rust </tag>
            
            <tag> gui </tag>
            
            <tag> sciter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rust中的文本断行（newline）</title>
      <link href="/newline-differ-in-Windows-and-Linux/"/>
      <url>/newline-differ-in-Windows-and-Linux/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>在Windows平台用Rust编程，有时候需要写入batch（.bat）文件，但是却不能正确地执行。</p><p>下面是一个发送应用的快捷方式到桌面的batch。</p><span id="more"></span><pre class="language-basic" data-language="basic"><code class="language-basic">@echo <span class="token keyword">off</span><span class="token punctuation">:</span><span class="token punctuation">:</span>设置程序或文件的完整路径（必选）<span class="token function">set</span> <span class="token function">Program</span><span class="token operator">=</span>C<span class="token punctuation">:</span>\Users\Admin\Desktop\anki_server.exe<span class="token punctuation">:</span><span class="token punctuation">:</span>设置快捷方式名称（必选）<span class="token function">set</span> LnkName<span class="token operator">=</span>anki_server<span class="token punctuation">:</span><span class="token punctuation">:</span>设置程序的工作路径，一般为程序主目录，此项若留空，脚本将自行分析路径<span class="token function">set</span> WorkDir<span class="token operator">=</span><span class="token punctuation">:</span><span class="token punctuation">:</span>设置快捷方式显示的说明（可选）<span class="token function">set</span> Desc<span class="token operator">=</span>测试<span class="token keyword">if</span> <span class="token operator">not</span> defined WorkDir <span class="token keyword">call</span><span class="token punctuation">:</span>GetWorkDir <span class="token string">"%Program%"</span><span class="token punctuation">(</span>echo <span class="token function">Set</span> WshShell<span class="token operator">=</span>CreateObject<span class="token punctuation">(</span><span class="token string">"WScript.Shell"</span><span class="token operator">^</span><span class="token punctuation">)</span>echo strDesKtop<span class="token operator">=</span>WshShell.SpecialFolders<span class="token punctuation">(</span><span class="token string">"DesKtop"</span><span class="token operator">^</span><span class="token punctuation">)</span>echo <span class="token function">Set</span> oShellLink<span class="token operator">=</span>WshShell.CreateShortcut<span class="token punctuation">(</span>strDesKtop<span class="token operator">^</span><span class="token operator">&amp;</span>"\%LnkName%.lnk"<span class="token operator">^</span><span class="token punctuation">)</span>echo oShellLink.TargetPath<span class="token operator">=</span><span class="token string">"%Program%"</span>echo oShellLink.WorkingDirectory<span class="token operator">=</span><span class="token string">"%WorkDir%"</span>echo oShellLink.WindowStyle<span class="token operator">=</span><span class="token number">1</span>echo oShellLink.Description<span class="token operator">=</span><span class="token string">"%Desc%"</span>echo oShellLink.Save<span class="token punctuation">)</span><span class="token operator">></span>makelnk.vbsecho created shelllnk OKmakelnk.vbsdel <span class="token operator">/</span>f <span class="token operator">/</span>q makelnk.vbs<span class="token keyword">exit</span><span class="token keyword">goto</span> <span class="token punctuation">:</span>eof<span class="token punctuation">:</span>GetWorkDir<span class="token function">set</span> WorkDir<span class="token operator">=</span>%~dp1<span class="token function">set</span> WorkDir<span class="token operator">=</span>%WorkDir<span class="token punctuation">:</span>~<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span>%<span class="token keyword">goto</span> <span class="token punctuation">:</span>eof</code></pre><p>执行后得到，’柟寮忓悕绉帮紙蹇呴€夛級’ 不是内部或外部命令，也不是可运行的程序或批处理文件。</p><h2 id="Rust写文件默认的newline"><a href="#Rust写文件默认的newline" class="headerlink" title="Rust写文件默认的newline"></a>Rust写文件默认的newline</h2><h3 id="Windows中的体现"><a href="#Windows中的体现" class="headerlink" title="Windows中的体现"></a>Windows中的体现</h3><pre class="language-rust" data-language="rust"><code class="language-rust"><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token string">"f.txt"</span><span class="token punctuation">;</span><span class="token comment">// </span>    <span class="token keyword">let</span> <span class="token keyword">mut</span> file <span class="token operator">=</span> <span class="token class-name">OpenOptions</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token macro property">writeln!</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token macro property">writeln!</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span><span class="token string">"b"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>运行后，用记事本<code>f.txt</code>打开，显示如下：</p><p><img src="https://z3.ax1x.com/2021/06/09/2cGvLD.png" alt="Linux_newline" loading="lazy">](<a href="https://imgtu.com/i/2cGvLD">https://imgtu.com/i/2cGvLD</a>)</p><p>结果看出是Unix风格的newline “”\n”，再看下Rust writeln!的文档说明：</p><blockquote><p>On all platforms, the newline is the LINE FEED character (<code>\n</code>/<code>U+000A</code>) alone (no additional CARRIAGE RETURN (<code>\r</code>/<code>U+000D</code>).</p></blockquote><h2 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h2><p>Rust中为我们提供了macro  write!()，并没有newline。我们自己提供newline风格CRLE（\r\n）。</p><pre class="language-none"><code class="language-none">write!(file, &quot;&#123;&#125;\r\n&quot;,&quot;c&quot;).unwrap();</code></pre>]]></content>
      
      
      <categories>
          
          <category> program language </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rust </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无职转生～在异世界认真地活下去小说下载</title>
      <link href="/wzzs/"/>
      <url>/wzzs/</url>
      
        <content type="html"><![CDATA[<p>从qianbixiaoshuo上获取的<strong>无职转生～在异世界认真地活下去</strong>小说1-24卷提供百度网盘下载，txt和mobi(无目录) </p><span id="more"></span><p>网盘链接：<a href="https://pan.baidu.com/s/1fC61scDXaAXayJko60uj3Q">点此跳转网盘</a></p><p>提取码：2020</p>]]></content>
      
      
      <categories>
          
          <category> book </category>
          
      </categories>
      
      
        <tags>
            
            <tag> resource </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows搭建基于https协议的Anki局域网同步服务器</title>
      <link href="/set_up_anki_custom_server_on_https_protocol/"/>
      <url>/set_up_anki_custom_server_on_https_protocol/</url>
      
        <content type="html"><![CDATA[<hr><p><strong>配置满足的条件</strong>有：</p><ul><li>Windows Anki版本2.1（版本：帮助–&gt;关于）</li><li>安卓平台 Ankidroid 版本 &gt;=2.8</li><li>同步时局域网（手机热点，WIFI）内和在电脑旁</li><li>IOS anki （ipad，iphone等）不能同步。</li></ul><p><strong>首先运行</strong>引导配置程序，请双击<strong>deployer.exe。</strong></p><h2 id="一、检查Anki版本"><a href="#一、检查Anki版本" class="headerlink" title="一、检查Anki版本"></a>一、检查Anki版本</h2><p>安装上面所说的版本。</p><p>点击下一步。。。</p><p><a href="https://imgtu.com/i/bTGMlD"><img src="https://s1.ax1x.com/2022/03/12/bTGMlD.png" alt="bTGMlD.png" loading="lazy"></a></p><h2 id="二、设置Anki同步地址"><a href="#二、设置Anki同步地址" class="headerlink" title="二、设置Anki同步地址"></a>二、设置Anki同步地址</h2><h4 id="（1）添加根证书到受信任的系统证书区"><a href="#（1）添加根证书到受信任的系统证书区" class="headerlink" title="（1）添加根证书到受信任的系统证书区"></a>（1）添加根证书到受信任的系统证书区</h4><p>有如下弹窗请点击是。</p><p><a href="https://imgtu.com/i/bT8bQg"><img src="https://s1.ax1x.com/2022/03/12/bT8bQg.png" alt="bT8bQg.png" loading="lazy"></a></p><h4 id="（2）设置手机Anki同步地址"><a href="#（2）设置手机Anki同步地址" class="headerlink" title="（2）设置手机Anki同步地址"></a>（2）设置手机Anki同步地址</h4><p>1.在桌面找到<code>rootCA.crt</code> ，用QQ、USB、微信等发送文件到手机，并在手机中找到它，触摸弹出证书安装界面。仅安装一次，后续部署过程中无需此操作。</p><p><a href="https://imgtu.com/i/bTGKSO"><img src="https://s1.ax1x.com/2022/03/12/bTGKSO.png" alt="bTGKSO.png" loading="lazy"></a></p><p>2.手机开启在定义同步服务器，进入 设置-&gt;高级设置-&gt;自定义同步服务器（点击后勾选）</p><p>3.填写引导程序界面的同步地址和媒体文件同步地址，点击开关进入下一步。。。</p><p><a href="https://imgtu.com/i/jC122d"><img src="https://s1.ax1x.com/2022/06/23/jC122d.png" alt="jC122d.png" loading="lazy"></a></p><h2 id="三、将服务器端启动程序发送到桌面快捷方式，并添加到开始菜单"><a href="#三、将服务器端启动程序发送到桌面快捷方式，并添加到开始菜单" class="headerlink" title="三、将服务器端启动程序发送到桌面快捷方式，并添加到开始菜单"></a>三、将服务器端启动程序发送到桌面快捷方式，并添加到开始菜单</h2><p><a href="https://imgtu.com/i/bTGeFx"><img src="https://s1.ax1x.com/2022/03/12/bTGeFx.png" alt="bTGeFx.png" loading="lazy"></a></p><p>添加到开始菜单意味着可以通过开始搜索框快捷启动软件</p><p>然后就在桌面看到了上面的图标，点击下一步。。。</p><h2 id="四、新建账号-账号管理"><a href="#四、新建账号-账号管理" class="headerlink" title="四、新建账号/账号管理"></a>四、新建账号/账号管理</h2><p>选择 添加账号 ，再点击 提交选择，会出现输入框，输入简单的用户名和密码 ，点击 提交，即添加成功，点击下一步。。。</p><p><a href="https://imgtu.com/i/bT8jwn"><img src="https://s1.ax1x.com/2022/03/12/bT8jwn.png" alt="bT8jwn.png" loading="lazy"></a></p><h2 id="五、打开同步服务、Anki切换配置方案-填写账号"><a href="#五、打开同步服务、Anki切换配置方案-填写账号" class="headerlink" title="五、打开同步服务、Anki切换配置方案,填写账号"></a>五、打开同步服务、Anki切换配置方案,填写账号</h2><p>1.在桌面找到第五步发送的快捷方式Anki_server，双击后会出现黑色窗口（同步过程中保持运行），可最小化运行。如果采用DHCP动态分配IP的设备（比如校园网），请下翻至问答区Q2.</p><p><a href="https://imgtu.com/i/bTGmY6"><img src="https://s1.ax1x.com/2022/03/12/bTGmY6.png" alt="bTGmY6.png" loading="lazy"></a></p><p>2.打开电脑 Anki，建议 到<strong>文件–&gt;切换配置方案–&gt;添加</strong>新的配置方案并进入（如果有牌组，先导出），点击同步，输入刚刚创建的账号密码，成功后再导入牌组。</p><p><strong>百度网盘链接:</strong></p><p>**Windows Anki **，<a href="https://apps.ankiweb.net/">Anki官网下载</a>，<a href="https://github.com/ankitects/anki/releases">PC 历史版本</a></p><p><strong>Ankidroid</strong>：<a href="https://pan.baidu.com/s/1_sEx8PXrraQuXlsfx_Y3EA">百度网盘链接（提取码：2020）</a>，<a href="https://f-droid.org/packages/com.ichi2.anki/">F-droid市场下载</a>，<a href="https://github.com/ankidroid/Anki-Android/releases">gtihub下载</a></p><p><strong>服务器端软件</strong>（提取码：2021）：<a href="https://pan.baidu.com/s/1NMGVGzJ2nm6wmWSZDNn5iQ">点这里</a></p><p><strong>阿里云盘链接：</strong></p><p><strong>服务器端软件</strong><a href="https://www.aliyundrive.com/s/inbib8Fkx21">点这里</a></p><p><strong>问答区：</strong></p><p><strong>Q1：配置并打开服务器后，电脑端anki能够同步，手机端却不行？</strong></p><p>A：1.手机端anki IP是否配置正确，比如https去掉s 2.手机和电脑是否在同一局域网下 3.电脑开启了防火墙，把防火墙关掉。</p><p><strong>Q2:某天打开服务端软件开始同步，发现突然出现错误，明明账号和密码都对，以前都可以同步？</strong></p><p>可能设备采用DHCP动态分配IP,说明服务端所在的电脑被分配的IP已经发生变动；每次服务端软件anki_server(ankisyncd)启动会检测本机ip是否发生变化，如果发生变动，会自动修改电脑Anki的IP，并将详细的新地址打印到服务端黑色窗口，需要你手动填写到安卓Ankidroid的相应界面。<br><a href="https://imgtu.com/i/bTGnfK"><img src="https://s1.ax1x.com/2022/03/12/bTGnfK.png" alt="bTGnfK.png" loading="lazy"></a></p><p><strong>参考文章：</strong></p><p><a href="https://blog.dteam.top/posts/2019-04/%E6%9C%AC%E5%9C%B0https%E5%BF%AB%E9%80%9F%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88mkcert.html">本地https快速解决方案——mkcert</a></p><p><a href="https://github.com/ankicommunity/anki-sync-server-rs">ankicommunity/anki-sync-server-rs</a></p>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Anki </tag>
            
            <tag> 搭建Anki服务器 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
